version: '3.8'

services:
  # PostgreSQL Database for Development
  db:
    image: postgres:15-alpine
    container_name: dailie-postgres-dev
    environment:
      POSTGRES_DB: ${DB_NAME:-dailee_dev}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-devpassword}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ../init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    networks:
      - dailie-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-dailee_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (Development)
  redis:
    image: redis:7-alpine
    container_name: dailie-redis-dev
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    networks:
      - dailie-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend (Development)
  api:
    build:
      context: ../..
      dockerfile: deployment/Dockerfile
    container_name: dailie-api-dev
    ports:
      - "8001:8000"  # Different port for development
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-dailee_dev}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-devpassword}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-not-for-production}
      - DEBUG=${DEBUG:-true}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080,http://localhost:5173}
      - ENVIRONMENT=development
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dailie-dev-network
    restart: unless-stopped
    volumes:
      - ../../:/app  # Mount source code for development
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  postgres_data_dev:
    driver: local

networks:
  dailie-dev-network:
    driver: bridge
